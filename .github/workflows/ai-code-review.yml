name: AI Code Review

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  ai-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/github-script@v7
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        with:
          script: |
            const diff = await github.rest.repos.compareCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: context.payload.pull_request.base.sha,
              head: context.payload.pull_request.head.sha
            });
            
            const javaFiles = diff.data.files.filter(file => 
              file.filename.endsWith('.java') && file.patch
            );
            
            if (javaFiles.length === 0) return;
            
            for (const file of javaFiles.slice(0, 3)) { // 최대 3개 파일만
              const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {
                method: 'POST',
                headers: {
                  'Authorization': `Bearer ${process.env.OPENROUTER_API_KEY}`,
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                  model: 'deepseek/deepseek-chat-v3-0324:free',
                  messages: [{
                    role: 'system',
                    content: '당신은 Spring Boot 전문가입니다. 코드 변경사항을 한국어로 리뷰해주세요. 🟢좋은점, 🟡개선사항, 🔴문제점 형식으로 답변하세요.'
                  }, {
                    role: 'user', 
                    content: `파일: ${file.filename}\n\n변경사항:\n${file.patch}`
                  }],
                  max_tokens: 500,
                  temperature: 0
                })
              });
              
              if (response.ok) {
                const result = await response.json();
                const review = result.choices[0].message.content;
                
                await github.rest.pulls.createReview({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: context.payload.pull_request.number,
                  body: `## 🤖 AI 리뷰 - \`${file.filename}\`\n\n${review}`,
                  event: 'COMMENT'
                });
              }
            }